// <auto-generated />
using System;
using APIMuhasibat.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIMuhasibat.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220227074806_MM")]
    partial class MM
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APIMuhasibat.Models.Activler", b =>
                {
                    b.Property<string>("ActivId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ActivName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HesabHesId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProductmasterPmasId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("ActivId");

                    b.HasIndex("HesabHesId");

                    b.HasIndex("ProductmasterPmasId");

                    b.ToTable("Aktivs");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Bolme", b =>
                {
                    b.Property<string>("bId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("HesabHesId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("bolmeName")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("bId");

                    b.HasIndex("HesabHesId");

                    b.ToTable("Bolmes");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Hesab", b =>
                {
                    b.Property<string>("HesId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ActivId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("BId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Hesname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Hesnom")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TipId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("HesId");

                    b.ToTable("Hesabs");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Madde", b =>
                {
                    b.Property<string>("MId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("HesabHesId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("MaddeName")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("MId");

                    b.HasIndex("HesabHesId");

                    b.ToTable("Maddes");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Mushteri", b =>
                {
                    b.Property<string>("MushId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Firma")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Muqavilenom")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("Muqaviletar")
                        .HasColumnType("datetime2");

                    b.Property<string>("Odemesherti")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductmasterPmasId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Temsilchi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Valyuta")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Voen")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("MushId");

                    b.HasIndex("ProductmasterPmasId");

                    b.ToTable("Mushteris");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Productdetal", b =>
                {
                    b.Property<string>("PdetId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Barkod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Edv")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Maladi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PmasId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Qeyd")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("VId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("VergiId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("operationOpId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("PdetId");

                    b.HasIndex("operationOpId");

                    b.ToTable("Productdetals");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Productmaster", b =>
                {
                    b.Property<string>("PmasId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ActivId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("AnbId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("Emeltarixi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Kimden_sum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Kimden_voen")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Kurs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MushId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("Pay")
                        .HasColumnType("bit");

                    b.Property<string>("ProductdetalPdetId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("QrupId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Serial")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ShId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ValId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Vo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("PmasId");

                    b.HasIndex("ProductdetalPdetId");

                    b.ToTable("Productmasters");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Qrup", b =>
                {
                    b.Property<string>("QId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("DhesId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("KhesId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProductmasterPmasId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Qrupname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("QId");

                    b.HasIndex("ProductmasterPmasId");

                    b.ToTable("Qrups");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Shirket", b =>
                {
                    b.Property<string>("ShId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Aznhesab")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bankadi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bankkodu")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Bankvoen")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Cavabdehshexs")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Muxbirhesab")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductmasterPmasId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SWIFT")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Shiricrachi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Shirpercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shirvoen")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Unvan")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("userId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("ShId");

                    b.HasIndex("ProductmasterPmasId");

                    b.ToTable("Shirkets");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Tipler", b =>
                {
                    b.Property<string>("TipId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("HesabHesId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TipName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipId");

                    b.HasIndex("HesabHesId");

                    b.ToTable("Tiplers");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Vahid", b =>
                {
                    b.Property<string>("VId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProductdetalPdetId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Vahidadi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VergiId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("VId");

                    b.HasIndex("ProductdetalPdetId");

                    b.HasIndex("VergiId");

                    b.ToTable("Vahids");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Valyuta", b =>
                {
                    b.Property<string>("ValId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProductmasterPmasId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("Tarix")
                        .HasColumnType("datetime2");

                    b.Property<string>("Valname")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Valnominal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ValId");

                    b.HasIndex("ProductmasterPmasId");

                    b.ToTable("Valyutas");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Vergi", b =>
                {
                    b.Property<string>("VergiId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("Edv_tar")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductdetalPdetId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("VId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Vergikodu")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Vergikodununadi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VergiId");

                    b.HasIndex("ProductdetalPdetId");

                    b.ToTable("Vergis");
                });

            modelBuilder.Entity("APIMuhasibat.Models.ViewModels.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("photoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("providerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("providername")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("APIMuhasibat.Models.ViewModels.Navbar", b =>
                {
                    b.Property<string>("nid")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("ink")
                        .HasColumnType("int");

                    b.Property<int>("ncsay")
                        .HasColumnType("int");

                    b.Property<string>("nicon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("nisparent")
                        .HasColumnType("bit");

                    b.Property<string>("nlan")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("npath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nrol")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ntitle")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("pid")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("nid");

                    b.ToTable("Navbars");
                });

            modelBuilder.Entity("APIMuhasibat.Models.ViewModels.NavbarRole", b =>
                {
                    b.Property<string>("nrid")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("nid")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("nrid");

                    b.ToTable("Navroles");
                });

            modelBuilder.Entity("APIMuhasibat.Models.anbar", b =>
                {
                    b.Property<string>("AnbId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Anbarname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductmasterPmasId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("AnbId");

                    b.HasIndex("ProductmasterPmasId");

                    b.ToTable("anbars");
                });

            modelBuilder.Entity("APIMuhasibat.Models.fealsahe", b =>
                {
                    b.Property<string>("fsId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("fsADI")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("fs_CODE")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("fsId");

                    b.ToTable("fealsahes");
                });

            modelBuilder.Entity("APIMuhasibat.Models.logger", b =>
                {
                    b.Property<int>("lId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entityname")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("opername")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("lId");

                    b.ToTable("loggers");
                });

            modelBuilder.Entity("APIMuhasibat.Models.operation", b =>
                {
                    b.Property<string>("OpId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("Aksizderecesi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Alishqiy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Miqdar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PdetId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Qeyd")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Satishqiy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Submiqdar")
                        .HasColumnType("int");

                    b.Property<decimal>("Yolvergisi")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OpId");

                    b.ToTable("operations");
                });

            modelBuilder.Entity("APIMuhasibat.Services.RefreshToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Activler", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Hesab", null)
                        .WithMany("Activlers")
                        .HasForeignKey("HesabHesId");

                    b.HasOne("APIMuhasibat.Models.Productmaster", null)
                        .WithMany("Activlers")
                        .HasForeignKey("ProductmasterPmasId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Bolme", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Hesab", null)
                        .WithMany("Bolmes")
                        .HasForeignKey("HesabHesId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Madde", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Hesab", null)
                        .WithMany("Maddes")
                        .HasForeignKey("HesabHesId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Mushteri", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Productmaster", null)
                        .WithMany("Mushteris")
                        .HasForeignKey("ProductmasterPmasId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Productdetal", b =>
                {
                    b.HasOne("APIMuhasibat.Models.operation", null)
                        .WithMany("Productdetals")
                        .HasForeignKey("operationOpId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Productmaster", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Productdetal", null)
                        .WithMany("Productmasters")
                        .HasForeignKey("ProductdetalPdetId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Qrup", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Productmaster", null)
                        .WithMany("Qrups")
                        .HasForeignKey("ProductmasterPmasId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Shirket", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Productmaster", null)
                        .WithMany("Shirkets")
                        .HasForeignKey("ProductmasterPmasId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Tipler", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Hesab", null)
                        .WithMany("Tiplers")
                        .HasForeignKey("HesabHesId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Vahid", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Productdetal", null)
                        .WithMany("Vahids")
                        .HasForeignKey("ProductdetalPdetId");

                    b.HasOne("APIMuhasibat.Models.Vergi", null)
                        .WithMany("Vahids")
                        .HasForeignKey("VergiId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Valyuta", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Productmaster", null)
                        .WithMany("Valyutas")
                        .HasForeignKey("ProductmasterPmasId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Vergi", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Productdetal", null)
                        .WithMany("vergis")
                        .HasForeignKey("ProductdetalPdetId");
                });

            modelBuilder.Entity("APIMuhasibat.Models.anbar", b =>
                {
                    b.HasOne("APIMuhasibat.Models.Productmaster", null)
                        .WithMany("anbars")
                        .HasForeignKey("ProductmasterPmasId");
                });

            modelBuilder.Entity("APIMuhasibat.Services.RefreshToken", b =>
                {
                    b.HasOne("APIMuhasibat.Models.ViewModels.ApplicationUser", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("APIMuhasibat.Models.ViewModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("APIMuhasibat.Models.ViewModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIMuhasibat.Models.ViewModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("APIMuhasibat.Models.ViewModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APIMuhasibat.Models.Hesab", b =>
                {
                    b.Navigation("Activlers");

                    b.Navigation("Bolmes");

                    b.Navigation("Maddes");

                    b.Navigation("Tiplers");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Productdetal", b =>
                {
                    b.Navigation("Productmasters");

                    b.Navigation("Vahids");

                    b.Navigation("vergis");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Productmaster", b =>
                {
                    b.Navigation("Activlers");

                    b.Navigation("anbars");

                    b.Navigation("Mushteris");

                    b.Navigation("Qrups");

                    b.Navigation("Shirkets");

                    b.Navigation("Valyutas");
                });

            modelBuilder.Entity("APIMuhasibat.Models.Vergi", b =>
                {
                    b.Navigation("Vahids");
                });

            modelBuilder.Entity("APIMuhasibat.Models.ViewModels.ApplicationUser", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("APIMuhasibat.Models.operation", b =>
                {
                    b.Navigation("Productdetals");
                });
#pragma warning restore 612, 618
        }
    }
}
